[{"/home/minhtan/Documents/robotservices/src/index.js":"1","/home/minhtan/Documents/robotservices/src/reportWebVitals.js":"2","/home/minhtan/Documents/robotservices/src/App.js":"3","/home/minhtan/Documents/robotservices/src/components/Header.jsx":"4","/home/minhtan/Documents/robotservices/src/components/Body.jsx":"5","/home/minhtan/Documents/robotservices/src/components/Home.jsx":"6","/home/minhtan/Documents/robotservices/src/components/TestDataBase.jsx":"7","/home/minhtan/Documents/robotservices/src/components/About.jsx":"8","/home/minhtan/Documents/robotservices/src/components/Order.jsx":"9","/home/minhtan/Documents/robotservices/src/components/Drink.jsx":"10","/home/minhtan/Documents/robotservices/src/components/Connection.jsx":"11","/home/minhtan/Documents/robotservices/src/components/RobotState.jsx":"12","/home/minhtan/Documents/robotservices/src/components/Map.jsx":"13","/home/minhtan/Documents/robotservices/src/components/Teleoperation.jsx":"14","/home/minhtan/Documents/robotservices/src/components/SetGoal_1.jsx":"15","/home/minhtan/Documents/robotservices/src/components/SetGoal_2.jsx":"16","/home/minhtan/Documents/robotservices/src/components/HomeNavbar.jsx":"17","/home/minhtan/Documents/robotservices/src/components/ViewOrder.jsx":"18","/home/minhtan/Documents/robotservices/src/scripts/config.js":"19","/home/minhtan/Documents/robotservices/src/components/OrderDetail.jsx":"20","/home/minhtan/Documents/robotservices/src/components/OrderSuccess.jsx":"21","/home/minhtan/Documents/robotservices/src/components/CurrentOrder.jsx":"22"},{"size":660,"mtime":1687185290000,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1687020422000,"results":"25","hashOfConfig":"24"},{"size":212,"mtime":1687280864000,"results":"26","hashOfConfig":"24"},{"size":813,"mtime":1687591994317,"results":"27","hashOfConfig":"24"},{"size":990,"mtime":1687594065730,"results":"28","hashOfConfig":"24"},{"size":3108,"mtime":1687692104345,"results":"29","hashOfConfig":"24"},{"size":997,"mtime":1687596047698,"results":"30","hashOfConfig":"24"},{"size":324,"mtime":1687020422000,"results":"31","hashOfConfig":"24"},{"size":7072,"mtime":1687626473607,"results":"32","hashOfConfig":"24"},{"size":1451,"mtime":1687595278106,"results":"33","hashOfConfig":"24"},{"size":1759,"mtime":1687689471384,"results":"34","hashOfConfig":"24"},{"size":3936,"mtime":1687020422000,"results":"35","hashOfConfig":"24"},{"size":1484,"mtime":1687681367673,"results":"36","hashOfConfig":"24"},{"size":3149,"mtime":1687678413804,"results":"37","hashOfConfig":"24"},{"size":2763,"mtime":1687690317710,"results":"38","hashOfConfig":"24"},{"size":3751,"mtime":1687676166523,"results":"39","hashOfConfig":"24"},{"size":737,"mtime":1687672189383,"results":"40","hashOfConfig":"24"},{"size":2436,"mtime":1687684044527,"results":"41","hashOfConfig":"24"},{"size":303,"mtime":1687589208075,"results":"42","hashOfConfig":"24"},{"size":1862,"mtime":1687685359920,"results":"43","hashOfConfig":"24"},{"size":617,"mtime":1687591819691,"results":"44","hashOfConfig":"24"},{"size":2995,"mtime":1687691536666,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"wg1h7d",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/minhtan/Documents/robotservices/src/index.js",[],["95","96"],"/home/minhtan/Documents/robotservices/src/reportWebVitals.js",[],"/home/minhtan/Documents/robotservices/src/App.js",[],"/home/minhtan/Documents/robotservices/src/components/Header.jsx",["97","98","99"],"import React, { Component } from \"react\";\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\nclass Header extends Component {\n  render() {\n    return (\n      // <Container>\n      //   <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n      //     <Navbar.Brand href=\"#home\">React ROS Robot</Navbar.Brand>\n      //     <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      //     <Navbar.Collapse id=\"basic-navbar-nav\">\n      //       <Nav className=\"mr-auto\">\n      //         <Nav.Link href=\"/\">Home</Nav.Link>\n      //         <Nav.Link href=\"/about\">About</Nav.Link>\n      //         <Nav.Link href=\"/testDataBase\">Database</Nav.Link>\n      //       </Nav>\n      //     </Navbar.Collapse>\n      //   </Navbar>\n      // </Container>\n      <div></div>\n    );\n  }\n}\n\nexport default Header;\n","/home/minhtan/Documents/robotservices/src/components/Body.jsx",[],"/home/minhtan/Documents/robotservices/src/components/Home.jsx",["100","101","102","103","104","105"],"/home/minhtan/Documents/robotservices/src/components/TestDataBase.jsx",[],"/home/minhtan/Documents/robotservices/src/components/About.jsx",[],"/home/minhtan/Documents/robotservices/src/components/Order.jsx",["106"],"import React, { useEffect, useState } from \"react\";\nimport { Row, Col, Container, Button, Form, Table } from \"react-bootstrap\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\n\nimport { useHistory } from \"react-router-dom\";\n\nconst Order = () => {\n  const client = new WebSocket(\"ws://localhost:3000\")\n  const history = useHistory();\n  const defaultOrder = {\n    Date: new Date().toLocaleDateString(\"en-GB\"),\n    StaffID: \"Staff-01\",\n    OrderList: [],\n    Note: \"\",\n    Total: 0,\n  };\n  const [order, setOrder] = useState(defaultOrder);\n  const defaultOrderDetail = { Drink: null, Price: 0, Qty: \"\" };\n  const [orderDetails, setOrderDetails] = useState([defaultOrderDetail]);\n  const [drinks, setDrinks] = useState([]);\n\n  useEffect(() => {\n    fetchDrinks();\n  }, []);\n\n  useEffect(() => {\n    calculateTotalPrice();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [orderDetails]);\n\n  const btnAddRow_onclick = () => {\n    setOrderDetails([...orderDetails, defaultOrderDetail]);\n  };\n\n  const fetchDrinks = async () => {\n    try {\n      const response = await axios.get(\"https://db-api-5yux.onrender.com/drink\");\n      const data = response.data;\n      setDrinks(data);\n    } catch (error) {\n      console.log(\"Error fetching drinks:\", error);\n    }\n  };\n\n  const calculateTotalPrice = () => {\n    let total = 0;\n    orderDetails.forEach((detail) => {\n      const price = parseInt(detail.Price, 10);\n      const qty = parseInt(detail.Qty, 10);\n      total += price * qty;\n    });\n\n    if (isNaN(total)) total = 0;\n\n    setOrder({ ...order, Total: total });\n  };\n\n  const handleDrinkChange = (event, index) => {\n    const value = event.target.value;\n\n    const drink = drinks.find((d) => d._id === value);\n\n    const updatedOrderDetails = [...orderDetails];\n    updatedOrderDetails[index] = {\n      ...updatedOrderDetails[index],\n      Drink: value,\n      Price: drink ? drink.DrinkPrice : 0,\n    };\n    setOrderDetails(updatedOrderDetails);\n  };\n\n  const handleQtyChange = (event, index) => {\n    const { value } = event.target;\n    const numericValue = value.replace(/[^0-9]/g, \"\"); // Filter out non-numeric characters\n    const updatedOrderDetails = [...orderDetails];\n    updatedOrderDetails[index].Qty = numericValue;\n    setOrderDetails(updatedOrderDetails);\n  };\n\n  const handleNotesChange = (event) => {\n    const { value } = event.target;\n    setOrder({ ...order, Note: value });\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n      try {\n      // Create order details\n      const detailIds = [];\n\n      for (const detail of orderDetails) {\n        if (detail.Drink && detail.Price && detail.Qty) {\n          const orderDetailsResponse = await axios.post(\n            \"https://db-api-5yux.onrender.com/orderDetail\",\n            detail\n          );\n\n          detailIds.push(orderDetailsResponse.data._id);\n          console.log(\n            \"New order detail created:\",\n            orderDetailsResponse.statusText\n          );\n        }\n      }\n\n      // Create order\n      const updatedOrder = { ...order, OrderList: detailIds };\n      const orderResponse = await axios.post(\n        \"https://db-api-5yux.onrender.com/order\",\n        updatedOrder\n      );\n\n      // Navigation and toast\n      if (orderResponse.status === 201) {\n        const channel = new BroadcastChannel(\"6B29FC40-CA47-1067-B31D-00DD010662DA\");\n        channel.postMessage(\"Tạo Order thành công!\");\n        client.onopen = () => client.send(\"NEW ORDER FROM CLIENT\")\n        history.push('/orderSuccess')\n      } else {\n        console.log(orderResponse.status);\n      }\n    } catch (error) {\n      console.log(\"Error creating new order and order details:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <Form>\n        <Container>\n          <Row className=\"justify-content-md-center\">\n            <Col md={10}>\n              <Form.Group>\n                <Table striped borderless hover responsive size=\"sm\">\n                  <thead>\n                    <tr>\n                      <th className=\"text-center\">#</th>\n                      <th className=\"text-center\">Thức uống</th>\n                      <th className=\"text-center\">Đơn giá</th>\n                      <th className=\"text-center\">Số lượng</th>\n                    </tr>\n                  </thead>\n                  <tbody id=\"orderDetails_table\">\n                    {orderDetails.map((detail, index) => (\n                      <tr key={index}>\n                        <td className=\"d-flex center text-center\">\n                          <h5 className=\"stt\">{index + 1}</h5>\n                        </td>\n                        <td>\n                          <select\n                            className=\"table-select\"\n                            onChange={(event) =>\n                              handleDrinkChange(event, index)\n                            }\n                          >\n                            <option key={0} value={0}>\n                              Chọn món\n                            </option>\n                            {drinks.map((drink, index) => (\n                              <option key={index + 1} value={drink._id}>\n                                {drink.DrinkName}\n                              </option>\n                            ))}\n                          </select>\n                        </td>\n                        <td>\n                          <Form.Control\n                            type=\"text\"\n                            value={detail.Price}\n                            readOnly\n                          ></Form.Control>\n                        </td>\n                        <td>\n                          <Form.Control\n                            type=\"text\"\n                            value={detail.Qty}\n                            onChange={(event) => handleQtyChange(event, index)}\n                          ></Form.Control>\n                        </td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </Table>\n                <h5>Total: {order.Total} Đ</h5>\n              </Form.Group>\n              <Form.Group>\n                <Button type=\"button\" onClick={btnAddRow_onclick}>\n                  <span>+</span> Thêm món\n                </Button>\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Ghi chú</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  value={order.Note}\n                  rows={3}\n                  onChange={(event) => handleNotesChange(event)}\n                />\n              </Form.Group>\n              <Form.Group className=\"d-flex justify-content-center\">\n                <Button type=\"submit\" onClick={(event) => handleSubmit(event)}>\n                  Đặt món\n                </Button>\n              </Form.Group>\n            </Col>\n          </Row>\n        </Container>\n      </Form>\n      <ToastContainer/>\n    </div>\n  );\n};\n\nexport default Order;\n","/home/minhtan/Documents/robotservices/src/components/Drink.jsx",[],"/home/minhtan/Documents/robotservices/src/components/Connection.jsx",["107"],"/home/minhtan/Documents/robotservices/src/components/RobotState.jsx",["108","109","110"],"import React, { Component } from \"react\";\nimport { Row, Col, Container, Button } from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\nimport * as Three from \"three\";\n\nclass RobotState extends Component {\n  state = {\n    ros: null,\n    x: 0,\n    y: 0,\n    orientation: 0,\n    linear_velocity: 0,\n    angular_velocity: 0,\n  };\n\n  constructor() {\n    super();\n    this.init_connection();\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros();\n    console.log(this.state.ros);\n\n    this.state.ros.on(\"connection\", () => {\n      console.log(\"connection established in Teleoperation Component!\");\n      console.log(this.state.ros);\n      this.setState({ connected: true });\n    });\n\n    this.state.ros.on(\"close\", () => {\n      console.log(\"connection is closed!\");\n      this.setState({ connected: false });\n      //try to reconnect every 3 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\n            \"ws://\" +\n              Config.ROSBRIDGE_SERVER_IP +\n              \":\" +\n              Config.ROSBRIDGE_SERVER_PORT +\n              \"\"\n          );\n        } catch (error) {\n          console.log(\"connection problem \");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n\n    try {\n      this.state.ros.connect(\n        \"ws://\" +\n          Config.ROSBRIDGE_SERVER_IP +\n          \":\" +\n          Config.ROSBRIDGE_SERVER_PORT +\n          \"\"\n      );\n    } catch (error) {\n      console.log(\n        \"ws://\" +\n          Config.ROSBRIDGE_SERVER_IP +\n          \":\" +\n          Config.ROSBRIDGE_SERVER_PORT +\n          \"\"\n      );\n      console.log(\"connection problem \");\n    }\n  }\n\n  componentDidMount() {\n    this.getRobotState();\n  }\n\n  getRobotState() {\n    //create a pose subscriber\n    var pose_subscriber = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.POSE_TOPIC,\n      messageType: \"geometry_msgs/PoseWithCovarianceStamped\",\n    });\n\n    //create a pose callback\n    pose_subscriber.subscribe((message) => {\n      this.setState({ x: message.pose.pose.position.x.toFixed(2) });\n      this.setState({ y: message.pose.pose.position.y.toFixed(2) });\n      this.setState({\n        orientation: this.getOrientationFromQuaternion(\n          message.pose.pose.orientation\n        ).toFixed(2),\n      });\n    });\n\n    //create a subscriber for the velocities in the odom topic\n    var velocity_subscriber = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: Config.ODOM_TOPIC,\n      messageType: \"nav_msgs/Odometry\",\n    });\n\n    //callback function for the odom\n    velocity_subscriber.subscribe((message) => {\n      this.setState({\n        linear_velocity: message.twist.twist.linear.x.toFixed(2),\n      });\n      this.setState({\n        angular_velocity: message.twist.twist.angular.z.toFixed(2),\n      });\n    });\n  }\n\n  getOrientationFromQuaternion(ros_orientation_quaternion) {\n    var q = new Three.Quaternion(\n      ros_orientation_quaternion.x,\n      ros_orientation_quaternion.y,\n      ros_orientation_quaternion.z,\n      ros_orientation_quaternion.w\n    );\n    //convert this quaternion into Roll, Pitch and Yaw\n    var RPY = new Three.Euler().setFromQuaternion(q);\n\n    return RPY[\"_z\"] * (180 / Math.PI);\n  }\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col>\n            <h4 className=\"mt-4\">Position</h4>\n            <p className=\"mt-0\">x: {this.state.x}</p>\n            <p className=\"mt-0\">y: {this.state.y}</p>\n            <p className=\"mt-0\">Orientation: {this.state.orientation}</p>\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <h4 className=\"mt-4\">Velocities</h4>\n            <p className=\"mt-0\">\n              Linear Velocity: {this.state.linear_velocity}\n            </p>\n            <p className=\"mt-0\">\n              Angular Velocity: {this.state.angular_velocity}\n            </p>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default RobotState;\n","/home/minhtan/Documents/robotservices/src/components/Map.jsx",["111","112"],"/home/minhtan/Documents/robotservices/src/components/Teleoperation.jsx",["113"],"/home/minhtan/Documents/robotservices/src/components/SetGoal_1.jsx",["114","115","116","117","118"],"/home/minhtan/Documents/robotservices/src/components/SetGoal_2.jsx",["119","120","121","122"],"/home/minhtan/Documents/robotservices/src/components/HomeNavbar.jsx",[],"/home/minhtan/Documents/robotservices/src/components/ViewOrder.jsx",[],"/home/minhtan/Documents/robotservices/src/scripts/config.js",[],"/home/minhtan/Documents/robotservices/src/components/OrderDetail.jsx",[],"/home/minhtan/Documents/robotservices/src/components/OrderSuccess.jsx",["123","124","125","126","127","128","129"],"import { useHistory } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport { Row, Col, Container, Button, Form, Table } from \"react-bootstrap\";\n\nconst OrderSuccess = () => {\n    const history = useHistory()\n\n    const handleOrderAgain = async (event) => {\n        history.push('/newOrder')\n    }\n\n    return (\n        <div>\n            ORDER SUCCESSFULLY!\n            <div>\n                <Button type=\"submit\" onClick={(event) => handleOrderAgain(event)}>\n                    ORDER AGAIN\n                </Button>\n            </div>\n        </div>\n    )\n}\n\nexport default OrderSuccess","/home/minhtan/Documents/robotservices/src/components/CurrentOrder.jsx",["130","131","132","133","134"],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":19},{"ruleId":"139","severity":1,"message":"143","line":2,"column":21,"nodeType":"141","messageId":"142","endLine":2,"endColumn":27},{"ruleId":"139","severity":1,"message":"144","line":2,"column":29,"nodeType":"141","messageId":"142","endLine":2,"endColumn":32},{"ruleId":"139","severity":1,"message":"145","line":9,"column":8,"nodeType":"141","messageId":"142","endLine":9,"endColumn":17},{"ruleId":"139","severity":1,"message":"146","line":12,"column":31,"nodeType":"141","messageId":"142","endLine":12,"endColumn":35},{"ruleId":"147","severity":1,"message":"148","line":63,"column":19,"nodeType":"149","messageId":"150","endLine":63,"endColumn":32},{"ruleId":"147","severity":1,"message":"148","line":66,"column":19,"nodeType":"149","messageId":"150","endLine":66,"endColumn":32},{"ruleId":"147","severity":1,"message":"148","line":69,"column":19,"nodeType":"149","messageId":"150","endLine":69,"endColumn":32},{"ruleId":"147","severity":1,"message":"151","line":78,"column":21,"nodeType":"149","messageId":"150","endLine":78,"endColumn":34},{"ruleId":"139","severity":1,"message":"152","line":3,"column":26,"nodeType":"141","messageId":"142","endLine":3,"endColumn":31},{"ruleId":"153","severity":1,"message":"154","line":13,"column":5,"nodeType":"155","messageId":"156","endLine":13,"endColumn":15},{"ruleId":"139","severity":1,"message":"140","line":2,"column":20,"nodeType":"141","messageId":"142","endLine":2,"endColumn":29},{"ruleId":"139","severity":1,"message":"157","line":2,"column":31,"nodeType":"141","messageId":"142","endLine":2,"endColumn":37},{"ruleId":"153","severity":1,"message":"154","line":22,"column":5,"nodeType":"155","messageId":"156","endLine":22,"endColumn":15},{"ruleId":"153","severity":1,"message":"154","line":17,"column":5,"nodeType":"155","messageId":"156","endLine":17,"endColumn":15},{"ruleId":"139","severity":1,"message":"158","line":51,"column":9,"nodeType":"141","messageId":"142","endLine":51,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":16,"column":5,"nodeType":"155","messageId":"156","endLine":16,"endColumn":15},{"ruleId":"139","severity":1,"message":"159","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":13},{"ruleId":"139","severity":1,"message":"160","line":2,"column":15,"nodeType":"141","messageId":"142","endLine":2,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":2,"column":20,"nodeType":"141","messageId":"142","endLine":2,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":18,"column":9,"nodeType":"155","messageId":"156","endLine":18,"endColumn":19},{"ruleId":"139","severity":1,"message":"161","line":86,"column":15,"nodeType":"141","messageId":"142","endLine":86,"endColumn":23},{"ruleId":"139","severity":1,"message":"159","line":2,"column":10,"nodeType":"141","messageId":"142","endLine":2,"endColumn":13},{"ruleId":"139","severity":1,"message":"160","line":2,"column":15,"nodeType":"141","messageId":"142","endLine":2,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":2,"column":20,"nodeType":"141","messageId":"142","endLine":2,"endColumn":29},{"ruleId":"153","severity":1,"message":"154","line":18,"column":9,"nodeType":"155","messageId":"156","endLine":18,"endColumn":19},{"ruleId":"139","severity":1,"message":"162","line":2,"column":17,"nodeType":"141","messageId":"142","endLine":2,"endColumn":26},{"ruleId":"139","severity":1,"message":"163","line":2,"column":28,"nodeType":"141","messageId":"142","endLine":2,"endColumn":36},{"ruleId":"139","severity":1,"message":"159","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":13},{"ruleId":"139","severity":1,"message":"160","line":3,"column":15,"nodeType":"141","messageId":"142","endLine":3,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":3,"column":20,"nodeType":"141","messageId":"142","endLine":3,"endColumn":29},{"ruleId":"139","severity":1,"message":"164","line":3,"column":39,"nodeType":"141","messageId":"142","endLine":3,"endColumn":43},{"ruleId":"139","severity":1,"message":"165","line":3,"column":45,"nodeType":"141","messageId":"142","endLine":3,"endColumn":50},{"ruleId":"139","severity":1,"message":"166","line":3,"column":10,"nodeType":"141","messageId":"142","endLine":3,"endColumn":15},{"ruleId":"139","severity":1,"message":"146","line":3,"column":17,"nodeType":"141","messageId":"142","endLine":3,"endColumn":21},{"ruleId":"139","severity":1,"message":"160","line":3,"column":30,"nodeType":"141","messageId":"142","endLine":3,"endColumn":33},{"ruleId":"139","severity":1,"message":"159","line":3,"column":35,"nodeType":"141","messageId":"142","endLine":3,"endColumn":38},{"ruleId":"139","severity":1,"message":"167","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":17},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Nav' is defined but never used.","'ViewOrder' is defined but never used.","'Card' is defined but never used.","react/jsx-pascal-case","Imported JSX component SetGoal_2 must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component SetGoal_1 must be in PascalCase or SCREAMING_SNAKE_CASE","'toast' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","'Button' is defined but never used.","'navClient' is assigned a value but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'cusStyle' is assigned a value but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Form' is defined but never used.","'Table' is defined but never used.","'Modal' is defined but never used.","'SetGoal_2' is defined but never used.","no-global-assign","no-unsafe-negation"]